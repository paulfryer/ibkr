// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.Kiota.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SecdefSearchResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>applicable for bonds</summary>
        public int? Bondid { get; set; }
        /// <summary>Company Name - Exchange</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompanyHeader { get; set; }
#nullable restore
#else
        public string CompanyHeader { get; set; }
#endif
        /// <summary>Formal name of the company.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompanyName { get; set; }
#nullable restore
#else
        public string CompanyName { get; set; }
#endif
        /// <summary>Contract identifier for the unique contract.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Conid { get; set; }
#nullable restore
#else
        public string Conid { get; set; }
#endif
        /// <summary>Primary exchange of the contract</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Returns a string of dates, separated by semicolons.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Fop { get; set; }
#nullable restore
#else
        public string Fop { get; set; }
#endif
        /// <summary>The issuers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::IBKR.Api.Kiota.Models.SecdefSearchResponse_issuers>? Issuers { get; set; }
#nullable restore
#else
        public List<global::IBKR.Api.Kiota.Models.SecdefSearchResponse_issuers> Issuers { get; set; }
#endif
        /// <summary>Returns a string of dates, separated by semicolons.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Opt { get; set; }
#nullable restore
#else
        public string Opt { get; set; }
#endif
        /// <summary>Returns if the contract is available for trading.</summary>
        public bool? Restricted { get; set; }
        /// <summary>The sections property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::IBKR.Api.Kiota.Models.SecdefSearchResponse_sections>? Sections { get; set; }
#nullable restore
#else
        public List<global::IBKR.Api.Kiota.Models.SecdefSearchResponse_sections> Sections { get; set; }
#endif
        /// <summary>Underlying ticker symbol.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Symbol { get; set; }
#nullable restore
#else
        public string Symbol { get; set; }
#endif
        /// <summary>Returns a string of dates, separated by semicolons.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? War { get; set; }
#nullable restore
#else
        public string War { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.Kiota.Models.SecdefSearchResponse"/> and sets the default values.
        /// </summary>
        public SecdefSearchResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.Kiota.Models.SecdefSearchResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.Kiota.Models.SecdefSearchResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.Kiota.Models.SecdefSearchResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "bondid", n => { Bondid = n.GetIntValue(); } },
                { "companyHeader", n => { CompanyHeader = n.GetStringValue(); } },
                { "companyName", n => { CompanyName = n.GetStringValue(); } },
                { "conid", n => { Conid = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "fop", n => { Fop = n.GetStringValue(); } },
                { "issuers", n => { Issuers = n.GetCollectionOfObjectValues<global::IBKR.Api.Kiota.Models.SecdefSearchResponse_issuers>(global::IBKR.Api.Kiota.Models.SecdefSearchResponse_issuers.CreateFromDiscriminatorValue)?.AsList(); } },
                { "opt", n => { Opt = n.GetStringValue(); } },
                { "restricted", n => { Restricted = n.GetBoolValue(); } },
                { "sections", n => { Sections = n.GetCollectionOfObjectValues<global::IBKR.Api.Kiota.Models.SecdefSearchResponse_sections>(global::IBKR.Api.Kiota.Models.SecdefSearchResponse_sections.CreateFromDiscriminatorValue)?.AsList(); } },
                { "symbol", n => { Symbol = n.GetStringValue(); } },
                { "war", n => { War = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("bondid", Bondid);
            writer.WriteStringValue("companyHeader", CompanyHeader);
            writer.WriteStringValue("companyName", CompanyName);
            writer.WriteStringValue("conid", Conid);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("fop", Fop);
            writer.WriteCollectionOfObjectValues<global::IBKR.Api.Kiota.Models.SecdefSearchResponse_issuers>("issuers", Issuers);
            writer.WriteStringValue("opt", Opt);
            writer.WriteBoolValue("restricted", Restricted);
            writer.WriteCollectionOfObjectValues<global::IBKR.Api.Kiota.Models.SecdefSearchResponse_sections>("sections", Sections);
            writer.WriteStringValue("symbol", Symbol);
            writer.WriteStringValue("war", War);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
