// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.Kiota.Models
{
    /// <summary>
    /// Object detailing the successful deletion of a watchlist.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WatchlistDeleteSuccess : IAdditionalDataHolder, IParsable
    {
        /// <summary>Internal use. Always has value &apos;context&apos;.</summary>
        public global::IBKR.Api.Kiota.Models.WatchlistDeleteSuccess_action? Action { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::IBKR.Api.Kiota.Models.WatchlistDeleteSuccess_data? Data { get; set; }
#nullable restore
#else
        public global::IBKR.Api.Kiota.Models.WatchlistDeleteSuccess_data Data { get; set; }
#endif
        /// <summary>Internal use. Number of times endpoint has been visited during session.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MID { get; set; }
#nullable restore
#else
        public string MID { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.Kiota.Models.WatchlistDeleteSuccess"/> and sets the default values.
        /// </summary>
        public WatchlistDeleteSuccess()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.Kiota.Models.WatchlistDeleteSuccess"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.Kiota.Models.WatchlistDeleteSuccess CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.Kiota.Models.WatchlistDeleteSuccess();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "action", n => { Action = n.GetEnumValue<global::IBKR.Api.Kiota.Models.WatchlistDeleteSuccess_action>(); } },
                { "data", n => { Data = n.GetObjectValue<global::IBKR.Api.Kiota.Models.WatchlistDeleteSuccess_data>(global::IBKR.Api.Kiota.Models.WatchlistDeleteSuccess_data.CreateFromDiscriminatorValue); } },
                { "MID", n => { MID = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::IBKR.Api.Kiota.Models.WatchlistDeleteSuccess_action>("action", Action);
            writer.WriteObjectValue<global::IBKR.Api.Kiota.Models.WatchlistDeleteSuccess_data>("data", Data);
            writer.WriteStringValue("MID", MID);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
