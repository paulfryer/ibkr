// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.Kiota.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class HmdsScannerRunRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The delayedLocations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DelayedLocations { get; set; }
#nullable restore
#else
        public string DelayedLocations { get; set; }
#endif
        /// <summary>Array of objects containing all filters upon the scanner request. Content contains a series of key:value pairs. While “filters” must be specified in the body, no content in the array needs to be passed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::IBKR.Api.Kiota.Models.HmdsScannerRunRequest_filters? Filters { get; set; }
#nullable restore
#else
        public global::IBKR.Api.Kiota.Models.HmdsScannerRunRequest_filters Filters { get; set; }
#endif
        /// <summary>Specify the type of instrument for the request. Found under the “instrument_list” value of the /hmds/scanner/params request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Instrument { get; set; }
#nullable restore
#else
        public string Instrument { get; set; }
#endif
        /// <summary>Specify the type of location for the request. Found under the “location_tree” value of the /hmds/scanner/params request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Locations { get; set; }
#nullable restore
#else
        public string Locations { get; set; }
#endif
        /// <summary>Specify how many items should be returned.</summary>
        public int? MaxItems { get; set; }
        /// <summary>Specify the scanner type for the request. Found under the “scan_type_list” value of the /hmds/scanner/params request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ScanCode { get; set; }
#nullable restore
#else
        public string ScanCode { get; set; }
#endif
        /// <summary>Specify the type of security type for the request. Found under the “location_tree” value of the /hmds/scanner/params request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SecType { get; set; }
#nullable restore
#else
        public string SecType { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.Kiota.Models.HmdsScannerRunRequest"/> and sets the default values.
        /// </summary>
        public HmdsScannerRunRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.Kiota.Models.HmdsScannerRunRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.Kiota.Models.HmdsScannerRunRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.Kiota.Models.HmdsScannerRunRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "delayedLocations", n => { DelayedLocations = n.GetStringValue(); } },
                { "filters", n => { Filters = n.GetObjectValue<global::IBKR.Api.Kiota.Models.HmdsScannerRunRequest_filters>(global::IBKR.Api.Kiota.Models.HmdsScannerRunRequest_filters.CreateFromDiscriminatorValue); } },
                { "instrument", n => { Instrument = n.GetStringValue(); } },
                { "locations", n => { Locations = n.GetStringValue(); } },
                { "maxItems", n => { MaxItems = n.GetIntValue(); } },
                { "scanCode", n => { ScanCode = n.GetStringValue(); } },
                { "secType", n => { SecType = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("delayedLocations", DelayedLocations);
            writer.WriteObjectValue<global::IBKR.Api.Kiota.Models.HmdsScannerRunRequest_filters>("filters", Filters);
            writer.WriteStringValue("instrument", Instrument);
            writer.WriteStringValue("locations", Locations);
            writer.WriteIntValue("maxItems", MaxItems);
            writer.WriteStringValue("scanCode", ScanCode);
            writer.WriteStringValue("secType", SecType);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
