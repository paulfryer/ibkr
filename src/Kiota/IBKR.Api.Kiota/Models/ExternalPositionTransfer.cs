// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.Kiota.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ExternalPositionTransfer : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The accountAtBroker property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountAtBroker { get; set; }
#nullable restore
#else
        public string AccountAtBroker { get; set; }
#endif
        /// <summary>The accountId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountId { get; set; }
#nullable restore
#else
        public string AccountId { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The brokerId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BrokerId { get; set; }
#nullable restore
#else
        public string BrokerId { get; set; }
#endif
        /// <summary>The brokerName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BrokerName { get; set; }
#nullable restore
#else
        public string BrokerName { get; set; }
#endif
        /// <summary>The clientInstructionId property</summary>
        public double? ClientInstructionId { get; set; }
        /// <summary>The signature property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Signature { get; set; }
#nullable restore
#else
        public string Signature { get; set; }
#endif
        /// <summary>The sourceIRAType property</summary>
        public global::IBKR.Api.Kiota.Models.ExternalPositionTransfer_sourceIRAType? SourceIRAType { get; set; }
        /// <summary>The subType property</summary>
        public global::IBKR.Api.Kiota.Models.ExternalPositionTransfer_subType? SubType { get; set; }
        /// <summary>The type property</summary>
        public global::IBKR.Api.Kiota.Models.ExternalPositionTransfer_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.Kiota.Models.ExternalPositionTransfer"/> and sets the default values.
        /// </summary>
        public ExternalPositionTransfer()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.Kiota.Models.ExternalPositionTransfer"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.Kiota.Models.ExternalPositionTransfer CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.Kiota.Models.ExternalPositionTransfer();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "accountAtBroker", n => { AccountAtBroker = n.GetStringValue(); } },
                { "accountId", n => { AccountId = n.GetStringValue(); } },
                { "brokerId", n => { BrokerId = n.GetStringValue(); } },
                { "brokerName", n => { BrokerName = n.GetStringValue(); } },
                { "clientInstructionId", n => { ClientInstructionId = n.GetDoubleValue(); } },
                { "signature", n => { Signature = n.GetStringValue(); } },
                { "sourceIRAType", n => { SourceIRAType = n.GetEnumValue<global::IBKR.Api.Kiota.Models.ExternalPositionTransfer_sourceIRAType>(); } },
                { "subType", n => { SubType = n.GetEnumValue<global::IBKR.Api.Kiota.Models.ExternalPositionTransfer_subType>(); } },
                { "type", n => { Type = n.GetEnumValue<global::IBKR.Api.Kiota.Models.ExternalPositionTransfer_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("accountAtBroker", AccountAtBroker);
            writer.WriteStringValue("accountId", AccountId);
            writer.WriteStringValue("brokerId", BrokerId);
            writer.WriteStringValue("brokerName", BrokerName);
            writer.WriteDoubleValue("clientInstructionId", ClientInstructionId);
            writer.WriteStringValue("signature", Signature);
            writer.WriteEnumValue<global::IBKR.Api.Kiota.Models.ExternalPositionTransfer_sourceIRAType>("sourceIRAType", SourceIRAType);
            writer.WriteEnumValue<global::IBKR.Api.Kiota.Models.ExternalPositionTransfer_subType>("subType", SubType);
            writer.WriteEnumValue<global::IBKR.Api.Kiota.Models.ExternalPositionTransfer_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
