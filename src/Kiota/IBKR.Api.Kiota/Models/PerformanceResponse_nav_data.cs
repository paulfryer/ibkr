// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.Kiota.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PerformanceResponse_nav_data : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Returns the base currency used in the account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BaseCurrency { get; set; }
#nullable restore
#else
        public string BaseCurrency { get; set; }
#endif
        /// <summary>Returns the end of the available frequency.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? End { get; set; }
#nullable restore
#else
        public string End { get; set; }
#endif
        /// <summary>Returns the account identifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Returns how identifiers are determined.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IdType { get; set; }
#nullable restore
#else
        public string IdType { get; set; }
#endif
        /// <summary>Returns sequential data points corresponding to the net asset value between the &quot;start&quot; and &quot;end&quot; days.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? Navs { get; set; }
#nullable restore
#else
        public UntypedNode Navs { get; set; }
#endif
        /// <summary>Returns the first available date for data.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Start { get; set; }
#nullable restore
#else
        public string Start { get; set; }
#endif
        /// <summary>Returns the intiial NAV available.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::IBKR.Api.Kiota.Models.PerformanceResponse_nav_data_startNAV? StartNAV { get; set; }
#nullable restore
#else
        public global::IBKR.Api.Kiota.Models.PerformanceResponse_nav_data_startNAV StartNAV { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.Kiota.Models.PerformanceResponse_nav_data"/> and sets the default values.
        /// </summary>
        public PerformanceResponse_nav_data()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.Kiota.Models.PerformanceResponse_nav_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.Kiota.Models.PerformanceResponse_nav_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.Kiota.Models.PerformanceResponse_nav_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "baseCurrency", n => { BaseCurrency = n.GetStringValue(); } },
                { "end", n => { End = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "idType", n => { IdType = n.GetStringValue(); } },
                { "navs", n => { Navs = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "start", n => { Start = n.GetStringValue(); } },
                { "startNAV", n => { StartNAV = n.GetObjectValue<global::IBKR.Api.Kiota.Models.PerformanceResponse_nav_data_startNAV>(global::IBKR.Api.Kiota.Models.PerformanceResponse_nav_data_startNAV.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("baseCurrency", BaseCurrency);
            writer.WriteStringValue("end", End);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("idType", IdType);
            writer.WriteObjectValue<UntypedNode>("navs", Navs);
            writer.WriteStringValue("start", Start);
            writer.WriteObjectValue<global::IBKR.Api.Kiota.Models.PerformanceResponse_nav_data_startNAV>("startNAV", StartNAV);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
