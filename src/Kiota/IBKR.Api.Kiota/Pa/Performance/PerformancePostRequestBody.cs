// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.Kiota.Pa.Performance
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PerformancePostRequestBody : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>An array of strings containing each account identifier to retrieve performance details for.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? AcctIds { get; set; }
#nullable restore
#else
        public UntypedNode AcctIds { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Specify the period for which the account should be analyzed. Available period lengths:  * `1D` - The last 24 hours.  * `7D` - The last 7 full days.  * `MTD` - Performance since the 1st of the month.  * `1M` - A full calendar month from the last full trade day.  * `3M` - 3 full calendar months from the last full trade day.  * `6M` - 6 full calendar months from the last full trade day.  * `12M` - 12 full calendar month from the last full trade day.  * `YTD` - Performance since January 1st.</summary>
        public global::IBKR.Api.Kiota.Pa.Performance.PerformancePostRequestBody_period? Period { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.Kiota.Pa.Performance.PerformancePostRequestBody"/> and sets the default values.
        /// </summary>
        public PerformancePostRequestBody()
        {
            AdditionalData = new Dictionary<string, object>();
            Period = global::IBKR.Api.Kiota.Pa.Performance.PerformancePostRequestBody_period.OneTwoM;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.Kiota.Pa.Performance.PerformancePostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.Kiota.Pa.Performance.PerformancePostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.Kiota.Pa.Performance.PerformancePostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "acctIds", n => { AcctIds = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "period", n => { Period = n.GetEnumValue<global::IBKR.Api.Kiota.Pa.Performance.PerformancePostRequestBody_period>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<UntypedNode>("acctIds", AcctIds);
            writer.WriteEnumValue<global::IBKR.Api.Kiota.Pa.Performance.PerformancePostRequestBody_period>("period", Period);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
