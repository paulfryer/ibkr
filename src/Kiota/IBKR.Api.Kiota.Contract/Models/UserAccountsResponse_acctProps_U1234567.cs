// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.Kiota.Contract.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class UserAccountsResponse_acctProps_U1234567 : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The allowCustomerTime property</summary>
        public bool? AllowCustomerTime { get; set; }
        /// <summary>The hasChildAccounts property</summary>
        public bool? HasChildAccounts { get; set; }
        /// <summary>The isProp property</summary>
        public bool? IsProp { get; set; }
        /// <summary>The noFXConv property</summary>
        public bool? NoFXConv { get; set; }
        /// <summary>The supportsCashQty property</summary>
        public bool? SupportsCashQty { get; set; }
        /// <summary>The supportsFractions property</summary>
        public bool? SupportsFractions { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.Kiota.Contract.Models.UserAccountsResponse_acctProps_U1234567"/> and sets the default values.
        /// </summary>
        public UserAccountsResponse_acctProps_U1234567()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.Kiota.Contract.Models.UserAccountsResponse_acctProps_U1234567"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.Kiota.Contract.Models.UserAccountsResponse_acctProps_U1234567 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.Kiota.Contract.Models.UserAccountsResponse_acctProps_U1234567();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "allowCustomerTime", n => { AllowCustomerTime = n.GetBoolValue(); } },
                { "hasChildAccounts", n => { HasChildAccounts = n.GetBoolValue(); } },
                { "isProp", n => { IsProp = n.GetBoolValue(); } },
                { "noFXConv", n => { NoFXConv = n.GetBoolValue(); } },
                { "supportsCashQty", n => { SupportsCashQty = n.GetBoolValue(); } },
                { "supportsFractions", n => { SupportsFractions = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("allowCustomerTime", AllowCustomerTime);
            writer.WriteBoolValue("hasChildAccounts", HasChildAccounts);
            writer.WriteBoolValue("isProp", IsProp);
            writer.WriteBoolValue("noFXConv", NoFXConv);
            writer.WriteBoolValue("supportsCashQty", SupportsCashQty);
            writer.WriteBoolValue("supportsFractions", SupportsFractions);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
