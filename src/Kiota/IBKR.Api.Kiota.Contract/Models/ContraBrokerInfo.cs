// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.Kiota.Contract.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ContraBrokerInfo : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The accountTitle property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountTitle { get; set; }
#nullable restore
#else
        public string AccountTitle { get; set; }
#endif
        /// <summary>The accountType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountType { get; set; }
#nullable restore
#else
        public string AccountType { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The brokerAccountId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BrokerAccountId { get; set; }
#nullable restore
#else
        public string BrokerAccountId { get; set; }
#endif
        /// <summary>The brokerName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BrokerName { get; set; }
#nullable restore
#else
        public string BrokerName { get; set; }
#endif
        /// <summary>The contactEmail property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContactEmail { get; set; }
#nullable restore
#else
        public string ContactEmail { get; set; }
#endif
        /// <summary>The contactName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContactName { get; set; }
#nullable restore
#else
        public string ContactName { get; set; }
#endif
        /// <summary>The contactPhone property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContactPhone { get; set; }
#nullable restore
#else
        public string ContactPhone { get; set; }
#endif
        /// <summary>The country property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>The depositoryId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DepositoryId { get; set; }
#nullable restore
#else
        public string DepositoryId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.Kiota.Contract.Models.ContraBrokerInfo"/> and sets the default values.
        /// </summary>
        public ContraBrokerInfo()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.Kiota.Contract.Models.ContraBrokerInfo"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.Kiota.Contract.Models.ContraBrokerInfo CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.Kiota.Contract.Models.ContraBrokerInfo();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "accountTitle", n => { AccountTitle = n.GetStringValue(); } },
                { "accountType", n => { AccountType = n.GetStringValue(); } },
                { "brokerAccountId", n => { BrokerAccountId = n.GetStringValue(); } },
                { "brokerName", n => { BrokerName = n.GetStringValue(); } },
                { "contactEmail", n => { ContactEmail = n.GetStringValue(); } },
                { "contactName", n => { ContactName = n.GetStringValue(); } },
                { "contactPhone", n => { ContactPhone = n.GetStringValue(); } },
                { "country", n => { Country = n.GetStringValue(); } },
                { "depositoryId", n => { DepositoryId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("accountTitle", AccountTitle);
            writer.WriteStringValue("accountType", AccountType);
            writer.WriteStringValue("brokerAccountId", BrokerAccountId);
            writer.WriteStringValue("brokerName", BrokerName);
            writer.WriteStringValue("contactEmail", ContactEmail);
            writer.WriteStringValue("contactName", ContactName);
            writer.WriteStringValue("contactPhone", ContactPhone);
            writer.WriteStringValue("country", Country);
            writer.WriteStringValue("depositoryId", DepositoryId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
