// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.Kiota.Contract.Models
{
    /// <summary>
    /// Acknowledges IB&apos;s acceptance of the request to cancel the order. Does not report whether the cancellation can or will ultimately be enacted.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class OrderCancelSuccess : IAdditionalDataHolder, IParsable
    {
        /// <summary>IB account to which the order was originally set to clear.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Account { get; set; }
#nullable restore
#else
        public string Account { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>IB contract ID of the order ticket&apos;s instrument.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Conid { get; set; }
#nullable restore
#else
        public string Conid { get; set; }
#endif
        /// <summary>Indicates success with value &apos;Request was submitted&apos;</summary>
        public global::IBKR.Api.Kiota.Contract.Models.OrderCancelSuccess_msg? Msg { get; set; }
        /// <summary>IB order ID of the order ticket requested for cancellation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrderId { get; set; }
#nullable restore
#else
        public string OrderId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.Kiota.Contract.Models.OrderCancelSuccess"/> and sets the default values.
        /// </summary>
        public OrderCancelSuccess()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.Kiota.Contract.Models.OrderCancelSuccess"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.Kiota.Contract.Models.OrderCancelSuccess CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.Kiota.Contract.Models.OrderCancelSuccess();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account", n => { Account = n.GetStringValue(); } },
                { "conid", n => { Conid = n.GetStringValue(); } },
                { "msg", n => { Msg = n.GetEnumValue<global::IBKR.Api.Kiota.Contract.Models.OrderCancelSuccess_msg>(); } },
                { "order_id", n => { OrderId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("account", Account);
            writer.WriteStringValue("conid", Conid);
            writer.WriteEnumValue<global::IBKR.Api.Kiota.Contract.Models.OrderCancelSuccess_msg>("msg", Msg);
            writer.WriteStringValue("order_id", OrderId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
