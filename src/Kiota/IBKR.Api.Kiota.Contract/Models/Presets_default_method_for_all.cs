// <auto-generated/>
using System.Runtime.Serialization;
using System;
namespace IBKR.Api.Kiota.Contract.Models
{
    /// <summary>Interactive Brokers supports two forms of allocation methods. Allocation methods that have calculations completed by Interactive Brokers, and a set of allocation methods calculated by the user and then specified. IB-computed allocation methods:  * `A` - Available Equity  * `E` - Equal  * `N` - Net Liquidation ValueUser-specified allocation methods:  * `C` - Cash Quantity  * `P` - Percentage  * `R` - Ratios  * `S` - Shares</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public enum Presets_default_method_for_all
    {
        [EnumMember(Value = "AvailableEquity")]
        #pragma warning disable CS1591
        AvailableEquity,
        #pragma warning restore CS1591
        [EnumMember(Value = "E")]
        #pragma warning disable CS1591
        E,
        #pragma warning restore CS1591
        [EnumMember(Value = "N")]
        #pragma warning disable CS1591
        N,
        #pragma warning restore CS1591
        [EnumMember(Value = "C")]
        #pragma warning disable CS1591
        C,
        #pragma warning restore CS1591
        [EnumMember(Value = "P")]
        #pragma warning disable CS1591
        P,
        #pragma warning restore CS1591
        [EnumMember(Value = "R")]
        #pragma warning disable CS1591
        R,
        #pragma warning restore CS1591
        [EnumMember(Value = "S")]
        #pragma warning disable CS1591
        S,
        #pragma warning restore CS1591
    }
}
