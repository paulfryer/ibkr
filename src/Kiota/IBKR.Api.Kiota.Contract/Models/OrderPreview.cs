// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.Kiota.Contract.Models
{
    /// <summary>
    /// Projected costs and changes to margin and equity values in the account, if the order ticket were executed in full.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class OrderPreview : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Describes the projected costs associated with the order ticket.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::IBKR.Api.Kiota.Contract.Models.OrderPreview_amount? Amount { get; set; }
#nullable restore
#else
        public global::IBKR.Api.Kiota.Contract.Models.OrderPreview_amount Amount { get; set; }
#endif
        /// <summary>Describes the projected change to the account&apos;s equity.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::IBKR.Api.Kiota.Contract.Models.OrderPreview_equity? Equity { get; set; }
#nullable restore
#else
        public global::IBKR.Api.Kiota.Contract.Models.OrderPreview_equity Equity { get; set; }
#endif
        /// <summary>Human-readable text of an error message, if applicable. Otherwise null.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Error { get; set; }
#nullable restore
#else
        public string Error { get; set; }
#endif
        /// <summary>Describes the projected change to initial margin.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::IBKR.Api.Kiota.Contract.Models.OrderPreview_initial? Initial { get; set; }
#nullable restore
#else
        public global::IBKR.Api.Kiota.Contract.Models.OrderPreview_initial Initial { get; set; }
#endif
        /// <summary>Describes the projected change to maintenance margin.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::IBKR.Api.Kiota.Contract.Models.OrderPreview_maintenance? Maintenance { get; set; }
#nullable restore
#else
        public global::IBKR.Api.Kiota.Contract.Models.OrderPreview_maintenance Maintenance { get; set; }
#endif
        /// <summary>Describes the projected change to the account&apos;s position in the instrument.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::IBKR.Api.Kiota.Contract.Models.OrderPreview_position? Position { get; set; }
#nullable restore
#else
        public global::IBKR.Api.Kiota.Contract.Models.OrderPreview_position Position { get; set; }
#endif
        /// <summary>Human-readable text of warning message, if applicable. Otherwise null.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Warn { get; set; }
#nullable restore
#else
        public string Warn { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.Kiota.Contract.Models.OrderPreview"/> and sets the default values.
        /// </summary>
        public OrderPreview()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.Kiota.Contract.Models.OrderPreview"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.Kiota.Contract.Models.OrderPreview CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.Kiota.Contract.Models.OrderPreview();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetObjectValue<global::IBKR.Api.Kiota.Contract.Models.OrderPreview_amount>(global::IBKR.Api.Kiota.Contract.Models.OrderPreview_amount.CreateFromDiscriminatorValue); } },
                { "equity", n => { Equity = n.GetObjectValue<global::IBKR.Api.Kiota.Contract.Models.OrderPreview_equity>(global::IBKR.Api.Kiota.Contract.Models.OrderPreview_equity.CreateFromDiscriminatorValue); } },
                { "error", n => { Error = n.GetStringValue(); } },
                { "initial", n => { Initial = n.GetObjectValue<global::IBKR.Api.Kiota.Contract.Models.OrderPreview_initial>(global::IBKR.Api.Kiota.Contract.Models.OrderPreview_initial.CreateFromDiscriminatorValue); } },
                { "maintenance", n => { Maintenance = n.GetObjectValue<global::IBKR.Api.Kiota.Contract.Models.OrderPreview_maintenance>(global::IBKR.Api.Kiota.Contract.Models.OrderPreview_maintenance.CreateFromDiscriminatorValue); } },
                { "position", n => { Position = n.GetObjectValue<global::IBKR.Api.Kiota.Contract.Models.OrderPreview_position>(global::IBKR.Api.Kiota.Contract.Models.OrderPreview_position.CreateFromDiscriminatorValue); } },
                { "warn", n => { Warn = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::IBKR.Api.Kiota.Contract.Models.OrderPreview_amount>("amount", Amount);
            writer.WriteObjectValue<global::IBKR.Api.Kiota.Contract.Models.OrderPreview_equity>("equity", Equity);
            writer.WriteStringValue("error", Error);
            writer.WriteObjectValue<global::IBKR.Api.Kiota.Contract.Models.OrderPreview_initial>("initial", Initial);
            writer.WriteObjectValue<global::IBKR.Api.Kiota.Contract.Models.OrderPreview_maintenance>("maintenance", Maintenance);
            writer.WriteObjectValue<global::IBKR.Api.Kiota.Contract.Models.OrderPreview_position>("position", Position);
            writer.WriteStringValue("warn", Warn);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
