// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.Kiota.Contract.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class NonDisclosedDetail : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The buyerSellBic property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BuyerSellBic { get; set; }
#nullable restore
#else
        public string BuyerSellBic { get; set; }
#endif
        /// <summary>The memberAccountId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MemberAccountId { get; set; }
#nullable restore
#else
        public string MemberAccountId { get; set; }
#endif
        /// <summary>The psetBic property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PsetBic { get; set; }
#nullable restore
#else
        public string PsetBic { get; set; }
#endif
        /// <summary>The reagDeagBic property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReagDeagBic { get; set; }
#nullable restore
#else
        public string ReagDeagBic { get; set; }
#endif
        /// <summary>The safeKeepingAccountId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SafeKeepingAccountId { get; set; }
#nullable restore
#else
        public string SafeKeepingAccountId { get; set; }
#endif
        /// <summary>The settleDate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SettleDate { get; set; }
#nullable restore
#else
        public string SettleDate { get; set; }
#endif
        /// <summary>The tradeDate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TradeDate { get; set; }
#nullable restore
#else
        public string TradeDate { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.Kiota.Contract.Models.NonDisclosedDetail"/> and sets the default values.
        /// </summary>
        public NonDisclosedDetail()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.Kiota.Contract.Models.NonDisclosedDetail"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.Kiota.Contract.Models.NonDisclosedDetail CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.Kiota.Contract.Models.NonDisclosedDetail();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "buyerSellBic", n => { BuyerSellBic = n.GetStringValue(); } },
                { "memberAccountId", n => { MemberAccountId = n.GetStringValue(); } },
                { "psetBic", n => { PsetBic = n.GetStringValue(); } },
                { "reagDeagBic", n => { ReagDeagBic = n.GetStringValue(); } },
                { "safeKeepingAccountId", n => { SafeKeepingAccountId = n.GetStringValue(); } },
                { "settleDate", n => { SettleDate = n.GetStringValue(); } },
                { "tradeDate", n => { TradeDate = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("buyerSellBic", BuyerSellBic);
            writer.WriteStringValue("memberAccountId", MemberAccountId);
            writer.WriteStringValue("psetBic", PsetBic);
            writer.WriteStringValue("reagDeagBic", ReagDeagBic);
            writer.WriteStringValue("safeKeepingAccountId", SafeKeepingAccountId);
            writer.WriteStringValue("settleDate", SettleDate);
            writer.WriteStringValue("tradeDate", TradeDate);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
