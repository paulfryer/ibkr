// <auto-generated/>
#pragma warning disable CS0618
using IBKR.Api.Kiota.Contract.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query
{
    /// <summary>
    /// Builds and executes requests for operations under \gw\api\v1\bank-instructions\query
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class QueryRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public QueryRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/gw/api/v1/bank-instructions/query", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public QueryRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/gw/api/v1/bank-instructions/query", rawUrl)
        {
        }
        /// <summary>
        /// View active bank instructions for an accountId.&lt;br&gt;&lt;br&gt;**Scope**: `bank-instructions.read`&lt;br&gt;**Security Policy**: `Signed JWT`
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryPostResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::IBKR.Api.Kiota.Contract.Models.MissingRequiredParameterResponse">When receiving a 400 status code</exception>
        /// <exception cref="global::IBKR.Api.Kiota.Contract.Models.ForbiddenInstructionResponse">When receiving a 403 status code</exception>
        /// <exception cref="global::IBKR.Api.Kiota.Contract.Models.BusinessRejectResponse">When receiving a 422 status code</exception>
        /// <exception cref="global::IBKR.Api.Kiota.Contract.Models.InternalServerErrorResponse">When receiving a 500 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryPostResponse?> PostAsQueryPostResponseAsync(global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryPostResponse> PostAsQueryPostResponseAsync(global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::IBKR.Api.Kiota.Contract.Models.MissingRequiredParameterResponse.CreateFromDiscriminatorValue },
                { "403", global::IBKR.Api.Kiota.Contract.Models.ForbiddenInstructionResponse.CreateFromDiscriminatorValue },
                { "422", global::IBKR.Api.Kiota.Contract.Models.BusinessRejectResponse.CreateFromDiscriminatorValue },
                { "500", global::IBKR.Api.Kiota.Contract.Models.InternalServerErrorResponse.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryPostResponse>(requestInfo, global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryPostResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// View active bank instructions for an accountId.&lt;br&gt;&lt;br&gt;**Scope**: `bank-instructions.read`&lt;br&gt;**Security Policy**: `Signed JWT`
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::IBKR.Api.Kiota.Contract.Models.MissingRequiredParameterResponse">When receiving a 400 status code</exception>
        /// <exception cref="global::IBKR.Api.Kiota.Contract.Models.ForbiddenInstructionResponse">When receiving a 403 status code</exception>
        /// <exception cref="global::IBKR.Api.Kiota.Contract.Models.BusinessRejectResponse">When receiving a 422 status code</exception>
        /// <exception cref="global::IBKR.Api.Kiota.Contract.Models.InternalServerErrorResponse">When receiving a 500 status code</exception>
        [Obsolete("This method is obsolete. Use PostAsQueryPostResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryResponse?> PostAsync(global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryResponse> PostAsync(global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::IBKR.Api.Kiota.Contract.Models.MissingRequiredParameterResponse.CreateFromDiscriminatorValue },
                { "403", global::IBKR.Api.Kiota.Contract.Models.ForbiddenInstructionResponse.CreateFromDiscriminatorValue },
                { "422", global::IBKR.Api.Kiota.Contract.Models.BusinessRejectResponse.CreateFromDiscriminatorValue },
                { "500", global::IBKR.Api.Kiota.Contract.Models.InternalServerErrorResponse.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryResponse>(requestInfo, global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// View active bank instructions for an accountId.&lt;br&gt;&lt;br&gt;**Scope**: `bank-instructions.read`&lt;br&gt;**Security Policy**: `Signed JWT`
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder WithUrl(string rawUrl)
        {
            return new global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::IBKR.Api.Kiota.Contract.Models.QueryBankInstructionResponse"/>, <see cref="global::IBKR.Api.Kiota.Contract.Models.QueryRecentRecurringEventResponse"/>, <see cref="global::IBKR.Api.Kiota.Contract.Models.QueryRecurringInstructionsResponse"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class QueryPostResponse : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::IBKR.Api.Kiota.Contract.Models.QueryBankInstructionResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::IBKR.Api.Kiota.Contract.Models.QueryBankInstructionResponse? QueryBankInstructionResponse { get; set; }
#nullable restore
#else
            public global::IBKR.Api.Kiota.Contract.Models.QueryBankInstructionResponse QueryBankInstructionResponse { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::IBKR.Api.Kiota.Contract.Models.QueryRecentRecurringEventResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::IBKR.Api.Kiota.Contract.Models.QueryRecentRecurringEventResponse? QueryRecentRecurringEventResponse { get; set; }
#nullable restore
#else
            public global::IBKR.Api.Kiota.Contract.Models.QueryRecentRecurringEventResponse QueryRecentRecurringEventResponse { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::IBKR.Api.Kiota.Contract.Models.QueryRecurringInstructionsResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::IBKR.Api.Kiota.Contract.Models.QueryRecurringInstructionsResponse? QueryRecurringInstructionsResponse { get; set; }
#nullable restore
#else
            public global::IBKR.Api.Kiota.Contract.Models.QueryRecurringInstructionsResponse QueryRecurringInstructionsResponse { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryPostResponse"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryPostResponse CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryPostResponse();
                result.QueryBankInstructionResponse = new global::IBKR.Api.Kiota.Contract.Models.QueryBankInstructionResponse();
                result.QueryRecentRecurringEventResponse = new global::IBKR.Api.Kiota.Contract.Models.QueryRecentRecurringEventResponse();
                result.QueryRecurringInstructionsResponse = new global::IBKR.Api.Kiota.Contract.Models.QueryRecurringInstructionsResponse();
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(QueryBankInstructionResponse != null || QueryRecentRecurringEventResponse != null || QueryRecurringInstructionsResponse != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(QueryBankInstructionResponse, QueryRecentRecurringEventResponse, QueryRecurringInstructionsResponse);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                writer.WriteObjectValue<global::IBKR.Api.Kiota.Contract.Models.QueryBankInstructionResponse>(null, QueryBankInstructionResponse, QueryRecentRecurringEventResponse, QueryRecurringInstructionsResponse);
            }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class QueryRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::IBKR.Api.Kiota.Contract.Models.QueryBankInstructionResponse"/>, <see cref="global::IBKR.Api.Kiota.Contract.Models.QueryRecentRecurringEventResponse"/>, <see cref="global::IBKR.Api.Kiota.Contract.Models.QueryRecurringInstructionsResponse"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class QueryResponse : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::IBKR.Api.Kiota.Contract.Models.QueryBankInstructionResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::IBKR.Api.Kiota.Contract.Models.QueryBankInstructionResponse? QueryBankInstructionResponse { get; set; }
#nullable restore
#else
            public global::IBKR.Api.Kiota.Contract.Models.QueryBankInstructionResponse QueryBankInstructionResponse { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::IBKR.Api.Kiota.Contract.Models.QueryRecentRecurringEventResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::IBKR.Api.Kiota.Contract.Models.QueryRecentRecurringEventResponse? QueryRecentRecurringEventResponse { get; set; }
#nullable restore
#else
            public global::IBKR.Api.Kiota.Contract.Models.QueryRecentRecurringEventResponse QueryRecentRecurringEventResponse { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::IBKR.Api.Kiota.Contract.Models.QueryRecurringInstructionsResponse"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::IBKR.Api.Kiota.Contract.Models.QueryRecurringInstructionsResponse? QueryRecurringInstructionsResponse { get; set; }
#nullable restore
#else
            public global::IBKR.Api.Kiota.Contract.Models.QueryRecurringInstructionsResponse QueryRecurringInstructionsResponse { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryResponse"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryResponse CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::IBKR.Api.Kiota.Client.Gw.Api.V1.BankInstructions.Query.QueryRequestBuilder.QueryResponse();
                result.QueryBankInstructionResponse = new global::IBKR.Api.Kiota.Contract.Models.QueryBankInstructionResponse();
                result.QueryRecentRecurringEventResponse = new global::IBKR.Api.Kiota.Contract.Models.QueryRecentRecurringEventResponse();
                result.QueryRecurringInstructionsResponse = new global::IBKR.Api.Kiota.Contract.Models.QueryRecurringInstructionsResponse();
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(QueryBankInstructionResponse != null || QueryRecentRecurringEventResponse != null || QueryRecurringInstructionsResponse != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(QueryBankInstructionResponse, QueryRecentRecurringEventResponse, QueryRecurringInstructionsResponse);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                writer.WriteObjectValue<global::IBKR.Api.Kiota.Contract.Models.QueryBankInstructionResponse>(null, QueryBankInstructionResponse, QueryRecentRecurringEventResponse, QueryRecurringInstructionsResponse);
            }
        }
    }
}
#pragma warning restore CS0618
