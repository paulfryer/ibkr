// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.V2.Generated.Kiota.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AlertCreationRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Alert message which will be sent</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AlertMessage { get; set; }
#nullable restore
#else
        public string AlertMessage { get; set; }
#endif
        /// <summary>Alert name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AlertName { get; set; }
#nullable restore
#else
        public string AlertName { get; set; }
#endif
        /// <summary>Boolean number (0, 1) signifies if an alert can be triggered more than once. A value of ‘1’ is required for MTA alerts</summary>
        public int? AlertRepeatable { get; set; }
        /// <summary>Container for all conditions applied for an alert to trigger.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? Conditions { get; set; }
#nullable restore
#else
        public UntypedNode Conditions { get; set; }
#endif
        /// <summary>Email address you want to send email alerts to</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>Used with a tif of “GTD” only. Signifies time when the alert should terminate if no alert is triggered.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExpireTime { get; set; }
#nullable restore
#else
        public string ExpireTime { get; set; }
#endif
        /// <summary>allow (0) or disallow (1) alerts to trigger alerts through the mobile app</summary>
        public int? ITWSOrdersOnly { get; set; }
        /// <summary>optional; used in case of modification and represent Alert Id</summary>
        public long? OrderId { get; set; }
        /// <summary>Allow (1) or disallow (0) the alert to be triggered outside of regular trading hours</summary>
        public int? OutsideRth { get; set; }
        /// <summary>allow (1) or disallow (0) alerts to trigger email messages</summary>
        public int? SendMessage { get; set; }
        /// <summary>allow (1) or disallow (0) alerts to trigger TWS Pop-up messages</summary>
        public int? ShowPopup { get; set; }
        /// <summary>Time in Force duration of alert.</summary>
        public global::IBKR.Api.V2.Generated.Kiota.Models.AlertCreationRequest_tif? Tif { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.V2.Generated.Kiota.Models.AlertCreationRequest"/> and sets the default values.
        /// </summary>
        public AlertCreationRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.V2.Generated.Kiota.Models.AlertCreationRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.V2.Generated.Kiota.Models.AlertCreationRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.V2.Generated.Kiota.Models.AlertCreationRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "alertMessage", n => { AlertMessage = n.GetStringValue(); } },
                { "alertName", n => { AlertName = n.GetStringValue(); } },
                { "alertRepeatable", n => { AlertRepeatable = n.GetIntValue(); } },
                { "conditions", n => { Conditions = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "expireTime", n => { ExpireTime = n.GetStringValue(); } },
                { "iTWSOrdersOnly", n => { ITWSOrdersOnly = n.GetIntValue(); } },
                { "orderId", n => { OrderId = n.GetLongValue(); } },
                { "outsideRth", n => { OutsideRth = n.GetIntValue(); } },
                { "sendMessage", n => { SendMessage = n.GetIntValue(); } },
                { "showPopup", n => { ShowPopup = n.GetIntValue(); } },
                { "tif", n => { Tif = n.GetEnumValue<global::IBKR.Api.V2.Generated.Kiota.Models.AlertCreationRequest_tif>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("alertMessage", AlertMessage);
            writer.WriteStringValue("alertName", AlertName);
            writer.WriteIntValue("alertRepeatable", AlertRepeatable);
            writer.WriteObjectValue<UntypedNode>("conditions", Conditions);
            writer.WriteStringValue("email", Email);
            writer.WriteStringValue("expireTime", ExpireTime);
            writer.WriteIntValue("iTWSOrdersOnly", ITWSOrdersOnly);
            writer.WriteLongValue("orderId", OrderId);
            writer.WriteIntValue("outsideRth", OutsideRth);
            writer.WriteIntValue("sendMessage", SendMessage);
            writer.WriteIntValue("showPopup", ShowPopup);
            writer.WriteEnumValue<global::IBKR.Api.V2.Generated.Kiota.Models.AlertCreationRequest_tif>("tif", Tif);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
