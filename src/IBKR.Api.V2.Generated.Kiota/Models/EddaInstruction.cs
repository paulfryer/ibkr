// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.V2.Generated.Kiota.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class EddaInstruction : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The accountId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountId { get; set; }
#nullable restore
#else
        public string AccountId { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The bankAccountNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BankAccountNumber { get; set; }
#nullable restore
#else
        public string BankAccountNumber { get; set; }
#endif
        /// <summary>The bankBranchCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BankBranchCode { get; set; }
#nullable restore
#else
        public string BankBranchCode { get; set; }
#endif
        /// <summary>The bankClearingCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BankClearingCode { get; set; }
#nullable restore
#else
        public string BankClearingCode { get; set; }
#endif
        /// <summary>The bankInstructionName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BankInstructionName { get; set; }
#nullable restore
#else
        public string BankInstructionName { get; set; }
#endif
        /// <summary>The clientInstructionId property</summary>
        public double? ClientInstructionId { get; set; }
        /// <summary>The currency property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>The debtorIdentificationDocumentType property</summary>
        public global::IBKR.Api.V2.Generated.Kiota.Models.EddaInstruction_debtorIdentificationDocumentType? DebtorIdentificationDocumentType { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.V2.Generated.Kiota.Models.EddaInstruction"/> and sets the default values.
        /// </summary>
        public EddaInstruction()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.V2.Generated.Kiota.Models.EddaInstruction"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.V2.Generated.Kiota.Models.EddaInstruction CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.V2.Generated.Kiota.Models.EddaInstruction();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "accountId", n => { AccountId = n.GetStringValue(); } },
                { "bankAccountNumber", n => { BankAccountNumber = n.GetStringValue(); } },
                { "bankBranchCode", n => { BankBranchCode = n.GetStringValue(); } },
                { "bankClearingCode", n => { BankClearingCode = n.GetStringValue(); } },
                { "bankInstructionName", n => { BankInstructionName = n.GetStringValue(); } },
                { "clientInstructionId", n => { ClientInstructionId = n.GetDoubleValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "debtorIdentificationDocumentType", n => { DebtorIdentificationDocumentType = n.GetEnumValue<global::IBKR.Api.V2.Generated.Kiota.Models.EddaInstruction_debtorIdentificationDocumentType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("accountId", AccountId);
            writer.WriteStringValue("bankAccountNumber", BankAccountNumber);
            writer.WriteStringValue("bankBranchCode", BankBranchCode);
            writer.WriteStringValue("bankClearingCode", BankClearingCode);
            writer.WriteStringValue("bankInstructionName", BankInstructionName);
            writer.WriteDoubleValue("clientInstructionId", ClientInstructionId);
            writer.WriteStringValue("currency", Currency);
            writer.WriteEnumValue<global::IBKR.Api.V2.Generated.Kiota.Models.EddaInstruction_debtorIdentificationDocumentType>("debtorIdentificationDocumentType", DebtorIdentificationDocumentType);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
