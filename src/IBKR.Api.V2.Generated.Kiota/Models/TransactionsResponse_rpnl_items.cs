// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.V2.Generated.Kiota.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TransactionsResponse_rpnl_items : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Returns the account ID the trade transacted on.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Acctid { get; set; }
#nullable restore
#else
        public string Acctid { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Returns the amount gained or lost on the day.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Amt { get; set; }
#nullable restore
#else
        public string Amt { get; set; }
#endif
        /// <summary>Returns the contract ID of the transaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Conid { get; set; }
#nullable restore
#else
        public string Conid { get; set; }
#endif
        /// <summary>Specifies the currency of the realized value.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Cur { get; set; }
#nullable restore
#else
        public string Cur { get; set; }
#endif
        /// <summary>Specifies the date for the transaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Date { get; set; }
#nullable restore
#else
        public string Date { get; set; }
#endif
        /// <summary>Returns the foreign exchnage rate.</summary>
        public int? FxRate { get; set; }
        /// <summary>Determines if the day was a loss or gain * `L` - LOSS * `G` - GAIN</summary>
        public global::IBKR.Api.V2.Generated.Kiota.Models.TransactionsResponse_rpnl_items_side? Side { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.V2.Generated.Kiota.Models.TransactionsResponse_rpnl_items"/> and sets the default values.
        /// </summary>
        public TransactionsResponse_rpnl_items()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.V2.Generated.Kiota.Models.TransactionsResponse_rpnl_items"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.V2.Generated.Kiota.Models.TransactionsResponse_rpnl_items CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.V2.Generated.Kiota.Models.TransactionsResponse_rpnl_items();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "acctid", n => { Acctid = n.GetStringValue(); } },
                { "amt", n => { Amt = n.GetStringValue(); } },
                { "conid", n => { Conid = n.GetStringValue(); } },
                { "cur", n => { Cur = n.GetStringValue(); } },
                { "date", n => { Date = n.GetStringValue(); } },
                { "fxRate", n => { FxRate = n.GetIntValue(); } },
                { "side", n => { Side = n.GetEnumValue<global::IBKR.Api.V2.Generated.Kiota.Models.TransactionsResponse_rpnl_items_side>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("acctid", Acctid);
            writer.WriteStringValue("amt", Amt);
            writer.WriteStringValue("conid", Conid);
            writer.WriteStringValue("cur", Cur);
            writer.WriteStringValue("date", Date);
            writer.WriteIntValue("fxRate", FxRate);
            writer.WriteEnumValue<global::IBKR.Api.V2.Generated.Kiota.Models.TransactionsResponse_rpnl_items_side>("side", Side);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
