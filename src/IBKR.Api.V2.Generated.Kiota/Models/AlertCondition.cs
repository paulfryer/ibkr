// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.V2.Generated.Kiota.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AlertCondition : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Condition logic_bind value set.</summary>
        public bool? ConditionLogicBind { get; set; }
        /// <summary>Condition operator set for alert.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConditionOperator { get; set; }
#nullable restore
#else
        public string ConditionOperator { get; set; }
#endif
        /// <summary>Condition timeZone value set.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConditionTimeZone { get; set; }
#nullable restore
#else
        public string ConditionTimeZone { get; set; }
#endif
        /// <summary>TriggerMethod value set.</summary>
        public int? ConditionTriggerMethod { get; set; }
        /// <summary>The type of condition set.</summary>
        public int? ConditionType { get; set; }
        /// <summary>Condition value set.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConditionValue { get; set; }
#nullable restore
#else
        public string ConditionValue { get; set; }
#endif
        /// <summary>Returns conid and exchange in the format “conid@exchange”</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Conidex { get; set; }
#nullable restore
#else
        public string Conidex { get; set; }
#endif
        /// <summary>Includes relevant descriptions (if applicable).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContractDescription1 { get; set; }
#nullable restore
#else
        public string ContractDescription1 { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.V2.Generated.Kiota.Models.AlertCondition"/> and sets the default values.
        /// </summary>
        public AlertCondition()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.V2.Generated.Kiota.Models.AlertCondition"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.V2.Generated.Kiota.Models.AlertCondition CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.V2.Generated.Kiota.Models.AlertCondition();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "condition_logic_bind", n => { ConditionLogicBind = n.GetBoolValue(); } },
                { "condition_operator", n => { ConditionOperator = n.GetStringValue(); } },
                { "condition_time_zone", n => { ConditionTimeZone = n.GetStringValue(); } },
                { "condition_trigger_method", n => { ConditionTriggerMethod = n.GetIntValue(); } },
                { "condition_type", n => { ConditionType = n.GetIntValue(); } },
                { "condition_value", n => { ConditionValue = n.GetStringValue(); } },
                { "conidex", n => { Conidex = n.GetStringValue(); } },
                { "contract_description_1", n => { ContractDescription1 = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("condition_logic_bind", ConditionLogicBind);
            writer.WriteStringValue("condition_operator", ConditionOperator);
            writer.WriteStringValue("condition_time_zone", ConditionTimeZone);
            writer.WriteIntValue("condition_trigger_method", ConditionTriggerMethod);
            writer.WriteIntValue("condition_type", ConditionType);
            writer.WriteStringValue("condition_value", ConditionValue);
            writer.WriteStringValue("conidex", Conidex);
            writer.WriteStringValue("contract_description_1", ContractDescription1);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
