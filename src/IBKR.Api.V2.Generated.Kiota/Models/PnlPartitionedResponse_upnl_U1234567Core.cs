// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace IBKR.Api.V2.Generated.Kiota.Models
{
    /// <summary>
    /// The account or model&apos;s Profit and Loss.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class PnlPartitionedResponse_upnl_U1234567Core : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Daily PnL for the specified account profile.</summary>
        public int? Dpl { get; set; }
        /// <summary>Excess Liquidity for the specified account profile.</summary>
        public int? El { get; set; }
        /// <summary>Margin value for the specified account profile.</summary>
        public int? Mv { get; set; }
        /// <summary>Net Liquidity for the specified account profile.</summary>
        public int? Nl { get; set; }
        /// <summary>Returns the positional value of the returned account. Always returns 1 for individual accounts.</summary>
        public int? RowType { get; set; }
        /// <summary>Unrealized PnL for the specified account profile.</summary>
        public int? Upl { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::IBKR.Api.V2.Generated.Kiota.Models.PnlPartitionedResponse_upnl_U1234567Core"/> and sets the default values.
        /// </summary>
        public PnlPartitionedResponse_upnl_U1234567Core()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::IBKR.Api.V2.Generated.Kiota.Models.PnlPartitionedResponse_upnl_U1234567Core"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::IBKR.Api.V2.Generated.Kiota.Models.PnlPartitionedResponse_upnl_U1234567Core CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::IBKR.Api.V2.Generated.Kiota.Models.PnlPartitionedResponse_upnl_U1234567Core();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "dpl", n => { Dpl = n.GetIntValue(); } },
                { "el", n => { El = n.GetIntValue(); } },
                { "mv", n => { Mv = n.GetIntValue(); } },
                { "nl", n => { Nl = n.GetIntValue(); } },
                { "rowType", n => { RowType = n.GetIntValue(); } },
                { "upl", n => { Upl = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("dpl", Dpl);
            writer.WriteIntValue("el", El);
            writer.WriteIntValue("mv", Mv);
            writer.WriteIntValue("nl", Nl);
            writer.WriteIntValue("rowType", RowType);
            writer.WriteIntValue("upl", Upl);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
