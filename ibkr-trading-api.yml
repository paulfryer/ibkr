openapi: 3.0.3
info:
  title: Interactive Brokers Trading Web API
  description: |
    Interactive Brokers RESTful Web API provides seamless, secure, and real-time access to IBKR accounts.
    The Web API offers trading, market data, portfolio management, and account administration capabilities.
    
    ## Authentication
    IBKR supports multiple authentication methods -
    - OAuth 2.0 with private_key_jwt client authentication (RFC 7521 and RFC 7523)
    - OAuth 1.0a for third-party access
    - SSO for Financial Advisors and Introducing Brokers
    - Client Portal Gateway for retail clients
    
    ## Base URL
    All API requests should be made to - https://api.ibkr.com/v1/api/
    For Client Portal Gateway - https://localhost:5000/v1/api/
    
    ## Rate Limits
    - Global limit - 50 requests/second per authenticated username
    - CP Gateway - 10 requests/second
    - Specific endpoints have individual rate limits (see endpoint descriptions)
  version: 1.0.0
  contact:
    email: api-solutions@interactivebrokers.com
  
servers:
  - url: https://api.ibkr.com/v1/api
    description: Production API server
  - url: https://localhost:5000/v1/api
    description: Client Portal Gateway (local)

security:
  - oauth2: []
  - bearerAuth: []

tags:
  - name: Authentication
    description: Session and authentication management
  - name: Accounts
    description: Account information and management
  - name: Market Data
    description: Real-time and historical market data
  - name: Orders
    description: Order placement and management
  - name: Portfolio
    description: Portfolio positions and analysis
  - name: Instruments
    description: Security definitions and discovery
  - name: Scanner
    description: Market scanner operations
  - name: FYI
    description: Notifications and alerts

paths:
  # Authentication Endpoints
  /iserver/auth/status:
    get:
      tags: [Authentication]
      summary: Check authentication status
      operationId: getAuthStatus
      responses:
        '200':
          description: Authentication status
          content:
            application/json:
              schema:
                type: object
                properties:
                  authenticated:
                    type: boolean
                  connected:
                    type: boolean
                  competing:
                    type: boolean
                  message:
                    type: string
                  serverInfo:
                    type: object
                    properties:
                      serverName:
                        type: string
                      serverVersion:
                        type: string

  /iserver/auth/ssodh/init:
    post:
      tags: [Authentication]
      summary: Initialize SSO authentication
      operationId: initSSO
      responses:
        '200':
          description: SSO initialization successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  authUrl:
                    type: string

  /tickle:
    get:
      tags: [Authentication]
      summary: Keep session alive
      operationId: tickle
      description: Prevents session timeout. Rate limit - 1 req/sec
      responses:
        '200':
          description: Session extended
          content:
            application/json:
              schema:
                type: object
                properties:
                  session:
                    type: string
                  ssoExpires:
                    type: integer
                  collission:
                    type: boolean
                  userId:
                    type: integer
                  iserver:
                    type: object

  # Account Endpoints
  /iserver/accounts:
    get:
      tags: [Accounts]
      summary: List tradeable accounts
      operationId: getTradingAccounts
      responses:
        '200':
          description: List of accounts
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      type: string
                      example: "DU123456"
                  selectedAccount:
                    type: string

  /portfolio/accounts:
    get:
      tags: [Accounts, Portfolio]
      summary: List portfolio accounts
      operationId: getPortfolioAccounts
      description: Returns accounts for which the user can view position and account information. Rate limit - 1 req/5 secs
      responses:
        '200':
          description: Account list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountInfo'

  /portfolio/subaccounts:
    get:
      tags: [Accounts, Portfolio]
      summary: List subaccounts (FA/IBroker)
      operationId: getSubaccounts
      description: For multi-level account structures. Returns up to 100 subaccounts. Rate limit - 1 req/5 secs
      responses:
        '200':
          description: Subaccount list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountInfo'

  # Portfolio Endpoints
  /portfolio/{accountId}/ledger:
    get:
      tags: [Portfolio]
      summary: Get account cash balances by currency
      operationId: getAccountLedger
      parameters:
        - $ref: '#/components/parameters/accountId'
      responses:
        '200':
          description: Cash balances by currency
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/LedgerEntry'

  /portfolio/{accountId}/summary:
    get:
      tags: [Portfolio]
      summary: Get account summary
      operationId: getAccountSummary
      parameters:
        - $ref: '#/components/parameters/accountId'
      responses:
        '200':
          description: Account summary data
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/SummaryValue'

  # Instrument Discovery Endpoints
  /trsrv/stocks:
    get:
      tags: [Instruments]
      summary: Search stocks by symbol
      operationId: searchStocks
      parameters:
        - name: symbols
          in: query
          required: true
          schema:
            type: string
          description: Comma-separated list of stock symbols
          example: "AAPL,MSFT"
      responses:
        '200':
          description: Stock search results
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/StockResult'

  /trsrv/futures:
    get:
      tags: [Instruments]
      summary: Search futures by symbol
      operationId: searchFutures
      parameters:
        - name: symbols
          in: query
          required: true
          schema:
            type: string
          description: Comma-separated list of futures symbols
          example: "ES,NQ"
      responses:
        '200':
          description: Futures search results
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/FuturesResult'

  /iserver/secdef/search:
    get:
      tags: [Instruments]
      summary: General security search
      operationId: searchSecurities
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
          description: Symbol to search
        - name: secType
          in: query
          schema:
            type: string
            enum: [STK, OPT, FUT, FOP, IND, CASH, BOND, FUND]
          description: Security type filter
      responses:
        '200':
          description: Security search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecurityDefinition'

  /iserver/secdef/info:
    get:
      tags: [Instruments]
      summary: Get detailed security information
      operationId: getSecurityInfo
      parameters:
        - name: conid
          in: query
          required: true
          schema:
            type: integer
          description: Contract ID
        - name: exchange
          in: query
          schema:
            type: string
        - name: sectype
          in: query
          schema:
            type: string
        - name: month
          in: query
          schema:
            type: string
          description: Contract month (for derivatives)
        - name: strike
          in: query
          schema:
            type: number
          description: Strike price (for options)
      responses:
        '200':
          description: Security information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecurityInfo'

  /iserver/secdef/strikes:
    get:
      tags: [Instruments]
      summary: Get available strike prices
      operationId: getStrikes
      parameters:
        - name: conid
          in: query
          required: true
          schema:
            type: integer
        - name: exchange
          in: query
          required: true
          schema:
            type: string
        - name: sectype
          in: query
          required: true
          schema:
            type: string
        - name: month
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Available strikes
          content:
            application/json:
              schema:
                type: object
                properties:
                  call:
                    type: array
                    items:
                      type: number
                  put:
                    type: array
                    items:
                      type: number

  # Market Data Endpoints
  /iserver/marketdata/snapshot:
    get:
      tags: [Market Data]
      summary: Get market data snapshot
      operationId: getMarketDataSnapshot
      description: Get top-of-book market data. Rate limit - 10 req/sec. Requires pre-flight request on first use.
      parameters:
        - name: conids
          in: query
          required: true
          schema:
            type: string
          description: Comma-separated contract IDs
        - name: fields
          in: query
          schema:
            type: string
          description: Comma-separated field IDs (31=last, 84=bid, 86=ask, etc.)
      responses:
        '200':
          description: Market data snapshot
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MarketDataSnapshot'

  /iserver/marketdata/history:
    get:
      tags: [Market Data]
      summary: Get historical market data
      operationId: getHistoricalData
      description: Maximum 5 concurrent requests
      parameters:
        - name: conid
          in: query
          required: true
          schema:
            type: integer
        - name: period
          in: query
          required: true
          schema:
            type: string
          description: Time period (1d, 1w, 1m, 1y, etc.)
        - name: bar
          in: query
          required: true
          schema:
            type: string
          description: Bar size (1min, 5min, 1h, 1d, etc.)
        - name: outsideRth
          in: query
          schema:
            type: boolean
          description: Include data outside regular trading hours
      responses:
        '200':
          description: Historical market data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalData'

  # Order Management Endpoints
  /iserver/account/{accountId}/orders:
    post:
      tags: [Orders]
      summary: Place new order
      operationId: placeOrder
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderRequest'
      responses:
        '200':
          description: Order placed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '202':
          description: Order reply message (requires confirmation)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderReplyMessage'

  /iserver/account/{accountId}/order/{orderId}:
    post:
      tags: [Orders]
      summary: Modify existing order
      operationId: modifyOrder
      parameters:
        - $ref: '#/components/parameters/accountId'
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '200':
          description: Order modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'

    delete:
      tags: [Orders]
      summary: Cancel order
      operationId: cancelOrder
      parameters:
        - $ref: '#/components/parameters/accountId'
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cancel request submitted
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  order_id:
                    type: integer
                  conid:
                    type: integer
                  account:
                    type: string

  /iserver/account/orders:
    get:
      tags: [Orders]
      summary: Get live orders
      operationId: getLiveOrders
      description: Returns all orders for current session. Rate limit - 1 req/5 secs
      parameters:
        - name: filters
          in: query
          schema:
            type: string
            enum: [filled, cancelled, submitted]
        - name: force
          in: query
          schema:
            type: boolean
        - name: accountId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Order list
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  snapshot:
                    type: boolean

  /iserver/account/{accountId}/order/status/{orderId}:
    get:
      tags: [Orders]
      summary: Get order status
      operationId: getOrderStatus
      parameters:
        - $ref: '#/components/parameters/accountId'
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order status details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'

  /iserver/reply/{messageId}:
    post:
      tags: [Orders]
      summary: Reply to order message
      operationId: replyToMessage
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                confirmed:
                  type: boolean
              required:
                - confirmed
      responses:
        '200':
          description: Message confirmed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'

  /iserver/questions/suppress:
    post:
      tags: [Orders]
      summary: Suppress order warning messages
      operationId: suppressMessages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                messageIds:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Messages suppressed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  # Scanner Endpoints
  /iserver/scanner/params:
    get:
      tags: [Scanner]
      summary: Get scanner parameters
      operationId: getScannerParams
      description: Rate limit - 1 req/15 mins
      responses:
        '200':
          description: Scanner parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScannerParams'

  /iserver/scanner/run:
    post:
      tags: [Scanner]
      summary: Run market scanner
      operationId: runScanner
      description: Rate limit - 1 req/sec
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScannerRequest'
      responses:
        '200':
          description: Scanner results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScannerResult'

  # FYI/Notification Endpoints
  /fyi/unreadnumber:
    get:
      tags: [FYI]
      summary: Get unread notification count
      operationId: getUnreadCount
      description: Rate limit - 1 req/sec
      responses:
        '200':
          description: Unread count
          content:
            application/json:
              schema:
                type: object
                properties:
                  BN:
                    type: integer
                    description: Number of unread bulletins

  /fyi/notifications:
    get:
      tags: [FYI]
      summary: Get recent notifications
      operationId: getNotifications
      description: Rate limit - 1 req/sec
      responses:
        '200':
          description: Notification list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'

  /fyi/notifications/{notificationId}:
    put:
      tags: [FYI]
      summary: Mark notification as read
      operationId: markNotificationRead
      description: Rate limit - 1 req/sec
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification marked as read

  /fyi/settings:
    get:
      tags: [FYI]
      summary: Get notification settings
      operationId: getNotificationSettings
      description: Rate limit - 1 req/sec
      responses:
        '200':
          description: Notification settings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationSetting'

  /fyi/disclaimer/{typecode}:
    get:
      tags: [FYI]
      summary: Get disclaimer text
      operationId: getDisclaimer
      description: Rate limit - 1 req/sec
      parameters:
        - name: typecode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Disclaimer text
          content:
            application/json:
              schema:
                type: object
                properties:
                  FC:
                    type: string
                  DT:
                    type: string

    put:
      tags: [FYI]
      summary: Accept disclaimer
      operationId: acceptDisclaimer
      description: Rate limit - 1 req/sec
      parameters:
        - name: typecode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Disclaimer accepted

components:
  parameters:
    accountId:
      name: accountId
      in: path
      required: true
      schema:
        type: string
      description: Account identifier
      example: "DU123456"

  schemas:
    AccountInfo:
      type: object
      properties:
        id:
          type: string
        accountId:
          type: string
        accountVan:
          type: string
        accountTitle:
          type: string
        displayName:
          type: string
        accountAlias:
          type: string
        accountStatus:
          type: integer
        currency:
          type: string
        type:
          type: string
        tradingType:
          type: string
        businessType:
          type: string
        ibEntity:
          type: string
        clearingStatus:
          type: string
        parent:
          type: object
          properties:
            mmc:
              type: array
              items:
                type: string
            accountId:
              type: string
            isMParent:
              type: boolean
            isMChild:
              type: boolean
            isMultiplex:
              type: boolean

    LedgerEntry:
      type: object
      properties:
        commoditymarketvalue:
          type: number
        futuremarketvalue:
          type: number
        settledcash:
          type: number
        exchangerate:
          type: number
        sessionid:
          type: integer
        cashbalance:
          type: number
        corporatebondsmarketvalue:
          type: number
        warrantsmarketvalue:
          type: number
        netliquidationvalue:
          type: number
        interest:
          type: number
        unrealizedpnl:
          type: number
        stockmarketvalue:
          type: number
        moneyfunds:
          type: number
        currency:
          type: string
        realizedpnl:
          type: number
        funds:
          type: number
        acctcode:
          type: string
        issueroptionsmarketvalue:
          type: number
        key:
          type: string
        timestamp:
          type: integer
        severity:
          type: integer
        stockoptionmarketvalue:
          type: number
        futuresonlypnl:
          type: number
        tbondsmarketvalue:
          type: number
        futureoptionmarketvalue:
          type: number
        cashbalancefxsegment:
          type: number
        secondkey:
          type: string
        tbillsmarketvalue:
          type: number
        dividends:
          type: number

    SummaryValue:
      type: object
      properties:
        amount:
          type: number
        currency:
          type: string
        isNull:
          type: boolean
        timestamp:
          type: integer
        value:
          type: string
        severity:
          type: integer

    StockResult:
      type: object
      properties:
        name:
          type: string
        assetClass:
          type: string
        contracts:
          type: array
          items:
            type: object
            properties:
              conid:
                type: integer
              exchange:
                type: string
              isUS:
                type: boolean

    FuturesResult:
      type: object
      properties:
        symbol:
          type: string
        conid:
          type: integer
        underlyingConid:
          type: integer
        expirationDate:
          type: integer
        ltd:
          type: integer
        shortFuturesCutOff:
          type: integer
        longFuturesCutOff:
          type: integer

    SecurityDefinition:
      type: object
      properties:
        conid:
          type: string
        companyHeader:
          type: string
        companyName:
          type: string
        symbol:
          type: string
        description:
          type: string
        restricted:
          type: string
        sections:
          type: array
          items:
            type: object
            properties:
              secType:
                type: string
              months:
                type: string
              exchange:
                type: string
              showPrips:
                type: boolean

    SecurityInfo:
      type: object
      properties:
        conid:
          type: integer
        symbol:
          type: string
        secType:
          type: string
        exchange:
          type: string
        listingExchange:
          type: string
        right:
          type: string
          enum: [C, P]
        strike:
          type: number
        currency:
          type: string
        cusip:
          type: string
        coupon:
          type: string
        desc1:
          type: string
        desc2:
          type: string
        maturityDate:
          type: string
        multiplier:
          type: string
        tradingClass:
          type: string
        validExchanges:
          type: string
        showPrips:
          type: boolean

    MarketDataSnapshot:
      type: object
      properties:
        conid:
          type: integer
        conidEx:
          type: string
        server_id:
          type: string
        _updated:
          type: integer
      additionalProperties:
        type: string
      description: Field IDs are returned as keys with values as strings. Common fields - 31=last, 84=bid, 85=bid size, 86=ask, 88=ask size, 7059=last size

    HistoricalData:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              o:
                type: number
                description: Open price
              h:
                type: number
                description: High price
              l:
                type: number
                description: Low price
              c:
                type: number
                description: Close price
              v:
                type: number
                description: Volume
              t:
                type: integer
                description: Timestamp

    OrderRequest:
      type: object
      required:
        - conid
        - side
        - orderType
        - quantity
        - tif
      properties:
        conid:
          type: integer
          description: Contract ID
        conidex:
          type: string
          description: Extended contract ID for combos/spreads
        side:
          type: string
          enum: [BUY, SELL]
        orderType:
          type: string
          enum: [MKT, LMT, STP, STP_LMT, REL, TRAIL, MIDPRICE]
        price:
          type: number
          description: Limit price (for LMT orders)
        auxPrice:
          type: number
          description: Stop price (for STP orders)
        quantity:
          type: number
          description: Order quantity
        tif:
          type: string
          enum: [DAY, GTC, IOC, FOK, OPG, DTC]
          description: Time in force
        outsideRth:
          type: boolean
          description: Allow trading outside regular hours
        cOID:
          type: string
          description: Client order ID (for brackets)
        parentId:
          type: string
          description: Parent order ID (for child orders in brackets)
        listingExchange:
          type: string
        referrer:
          type: string
        orderRef:
          type: string
          description: User-defined order reference

    OrderResponse:
      type: object
      properties:
        order_id:
          type: string
        order_status:
          type: string
        encrypt_message:
          type: string

    OrderReplyMessage:
      type: object
      properties:
        id:
          type: string
        message:
          type: array
          items:
            type: string
        isSuppressed:
          type: boolean
        messageIds:
          type: array
          items:
            type: string

    Order:
      type: object
      properties:
        acct:
          type: string
        conidex:
          type: string
        conid:
          type: integer
        account:
          type: string
        orderId:
          type: integer
        cashCcy:
          type: string
        sizeAndFills:
          type: string
        orderDesc:
          type: string
        description1:
          type: string
        ticker:
          type: string
        secType:
          type: string
        listingExchange:
          type: string
        remainingQuantity:
          type: number
        filledQuantity:
          type: number
        totalSize:
          type: number
        companyName:
          type: string
        status:
          type: string
        order_ccp_status:
          type: string
        avgPrice:
          type: string
        origOrderType:
          type: string
        supportsTaxOpt:
          type: string
        lastExecutionTime:
          type: string
        orderType:
          type: string
        bgColor:
          type: string
        fgColor:
          type: string
        order_ref:
          type: string
        timeInForce:
          type: string
        lastExecutionTime_r:
          type: integer
        side:
          type: string

    OrderStatus:
      type: object
      properties:
        orderId:
          type: integer
        status:
          type: string
        filled:
          type: number
        remaining:
          type: number
        avgFillPrice:
          type: number
        permId:
          type: integer
        parentId:
          type: integer
        lastFillPrice:
          type: number
        clientId:
          type: integer
        whyHeld:
          type: string
        mktCapPrice:
          type: number

    ScannerParams:
      type: object
      properties:
        scanTypes:
          type: array
          items:
            type: string
        instruments:
          type: array
          items:
            type: string
        locations:
          type: array
          items:
            type: string
        scanCodes:
          type: array
          items:
            type: object

    ScannerRequest:
      type: object
      properties:
        scanCode:
          type: string
        instrument:
          type: string
        location:
          type: string
        numberOfRows:
          type: integer
        abovePrice:
          type: number
        belowPrice:
          type: number
        aboveVolume:
          type: integer
        marketCapAbove:
          type: number
        marketCapBelow:
          type: number

    ScannerResult:
      type: object
      properties:
        conid:
          type: integer
        contractDescription:
          type: string
        symbol:
          type: string
        rank:
          type: integer
        distance:
          type: string
        benchmark:
          type: string
        projection:
          type: string
        legsStr:
          type: string

    Notification:
      type: object
      properties:
        R:
          type: integer
          description: Read status (0 for unread, 1 for read)
        D:
          type: string
          description: Date timestamp
        MS:
          type: string
          description: Message subject
        MD:
          type: string
          description: Message body (HTML)
        ID:
          type: string
          description: Notification ID
        HT:
          type: integer
        FC:
          type: string
          description: FYI code

    NotificationSetting:
      type: object
      properties:
        FC:
          type: string
          description: FYI code
        H:
          type: integer
          description: Disclaimer accepted status
        A:
          type: integer
          description: Active status
        FD:
          type: string
          description: Full description
        FN:
          type: string
          description: Friendly name

  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://api.ibkr.com/oauth/authorize
          tokenUrl: https://api.ibkr.com/oauth/token
          scopes:
            trading: Access to trading operations
            market_data: Access to market data
            account: Access to account information
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
